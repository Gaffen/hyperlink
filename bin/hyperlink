#!/usr/bin/env node

var optimist = require('optimist'),
    commandLineOptions = optimist
        .usage('Check your hyperlinks integrities.\n$0 [options] <htmlFile(s) | url(s)>')
        .options('h', {
            alias: 'help',
            describe: 'Show this help',
            type: 'boolean',
            default: false
        })
        .options('root', {
            describe: 'Path to your web root (will be deduced from your input files if not specified)',
            type: 'string',
            demand: false
        })
        // .options('canonicalurl', {
        //     describe: 'URI root where the project being built will be deployed.',
        //     type: 'string',
        //     demand: false
        // })
        .options('verbose', {
            alias: 'v',
            describe: 'Also log correctly linked asset discovery.',
            type: 'boolean'
        })
        .options('recursive', {
            alias: 'r',
            describe: 'Crawl all HTML-pages linked with relative and root relative links. This stays inside your domain.',
            type: 'boolean'
        })
        .wrap(72)
        .argv;

if (commandLineOptions.h) {
    optimist.showHelp();
    process.exit(1);
}

var urlTools = require('urltools'),
    // canonicalUrl = commandLineOptions.canonicalurl && urlTools.ensureTrailingSlash(commandLineOptions.canonicalurl),
    rootUrl = commandLineOptions.root && urlTools.urlOrFsPathToUrl(commandLineOptions.root, true),
    inputUrls;

var hyperlink = require('../lib/index');

if (commandLineOptions._.length > 0) {
    inputUrls = commandLineOptions._.map(function (urlOrFsPath) {
        return urlTools.urlOrFsPathToUrl(String(urlOrFsPath), false);
    });
    if (!rootUrl) {
        rootUrl = urlTools.findCommonUrlPrefix(inputUrls.filter(function (inputUrl) {
            return (/^file:/).test(inputUrl);
        }));
        if (rootUrl) {
            console.warn('Guessing --root from input files: ' + rootUrl);
        }
    }
} else if (rootUrl && /^file:/.test(rootUrl)) {
    inputUrls = [rootUrl + '**/*.html'];
    console.warn('No input files specified, defaulting to ' + inputUrls[0]);
} else {
    console.error('No input files and no --root specified (or it isn\'t file:), cannot proceed.\n');
    optimist.showHelp();
    process.exit(1);
}

hyperlink({
    root: rootUrl,
    inputUrls: inputUrls,
    recursive: commandLineOptions.recursive,
    verbose: commandLineOptions.verbose
});
