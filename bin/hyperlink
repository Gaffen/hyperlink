#!/usr/bin/env node

var optimist = require('optimist'),
    commandLineOptions = optimist
        .usage('Check your hyperlinks integrities.\n$0 [options] <htmlFile(s) | url(s)>')
        .options('h', {
            alias: 'help',
            describe: 'Show this help',
            type: 'boolean',
            default: false
        })
        .options('root', {
            describe: 'Path to your web root (will be deduced from your input files if not specified)',
            type: 'string',
            demand: false
        })
        // .options('canonicalurl', {
        //     describe: 'URI root where the project being built will be deployed.',
        //     type: 'string',
        //     demand: false
        // })
        .options('verbose', {
            alias: 'v',
            describe: 'Log all added assets and relations. VERY verbose.',
            type: 'boolean'
        })
        .options('recursive', {
            alias: 'r',
            describe: 'Crawl all HTML-pages linked with relative and root relative links. This stays inside your domain.',
            type: 'boolean'
        })
        .wrap(72)
        .argv;

if (commandLineOptions.h) {
    optimist.showHelp();
    process.exit(1);
}

var urlTools = require('urltools'),
    // canonicalUrl = commandLineOptions.canonicalurl && urlTools.ensureTrailingSlash(commandLineOptions.canonicalurl),
    rootUrls = commandLineOptions.root ? [urlTools.urlOrFsPathToUrl(commandLineOptions.root, true)] : [],
    inputUrls;

var hyperlink = require('../lib/index');

if (commandLineOptions._.length > 0) {
    inputUrls = commandLineOptions._.map(function (urlOrFsPath) {
        return urlTools.urlOrFsPathToUrl(String(urlOrFsPath), false);
    });
    if (rootUrls.length === 0) {
        inputUrls.filter(function (inputUrl) {
            return /^http:/.test(inputUrl);
        }).forEach(function (inputUrl) {
            var urlObj = require('url').parse(inputUrl),
                rootUrl = urlObj.protocol + '//' + urlObj.host + '/';
            if (rootUrls.indexOf(rootUrl) === -1) {
                rootUrls.push(rootUrl);
            }
        });
        var fileInputUrls = inputUrls.filter(function (inputUrl) {
            return /^file:/.test(inputUrl);
        });
        if (fileInputUrls.length > 0) {
            rootUrls.push(urlTools.findCommonUrlPrefix(fileInputUrls));
        }
        console.warn('Guessing --root from input files: ' + rootUrls.join(' '));
    }
} else if (rootUrls && /^file:/.test(rootUrls[0])) {
    inputUrls = [rootUrls[0] + '**/*.html'];
    console.warn('No input files specified, defaulting to ' + inputUrls[0]);
} else {
    console.error('No input files and no --root specified (or it isn\'t file:), cannot proceed.\n');
    optimist.showHelp();
    process.exit(1);
}

hyperlink({
    rootUrls: rootUrls,
    inputUrls: inputUrls,
    recursive: commandLineOptions.recursive,
    verbose: commandLineOptions.verbose
});
